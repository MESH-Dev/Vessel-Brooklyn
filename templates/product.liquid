<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
<meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

<div class="grid--full" style="background: url(https://cdn.shopify.com/s/files/1/0941/6562/files/top-nav.png); background-repeat: no-repeat; background-size: cover;">

  <div class="grid__item large--two-thirds push--large--one-sixth text-center page-banner">

    <h1>Gifting</h1>

    {% comment %}
      Regular page content goes here.
    {% endcomment %}

  </div>

</div>

<div class="grid product">

{% assign current_variant = product.selected_or_first_available_variant %}

  {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
  <div class="grid__item large--one-half product-left" style="background: url({{ featured_image | img_url: 'master' }})">
  </div>

  <div class="grid__item large--one-half text-center product-right">

    <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">

      <div class="product-title">
        <h1>{{ product.title }}</h1>
        <h3>{{ current_variant.price | money }}</h3>
      </div>
      <div class="product-description">
        {{ product.description }}
      </div>

      <div class="product-social">
      </div>

      <div class="product-add">

        <select name="id" id="productSelect" class="product-single__variants">
          {% for variant in product.variants %}
            {% if variant.available %}

              {% comment %}
                Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
              {% endcomment %}
              <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

            {% else %}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {% endif %}
          {% endfor %}
        </select>

        {% if product.compare_at_price_max > product.price %}
          <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
          <p id="ComparePrice">
            {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
          </p>
        {% endif %}

        <label for="Quantity" class="quantity-selector">{{ 'products.product.quantity' | t }}</label>
        <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
      </div>

      <div class="product-add-to-cart">
        <button type="submit" name="add" id="AddToCart" class="btn">
          <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
        </button>
      </div>

    </form>

  </div>

</div>

{% comment %}
  Get first variant, or deep linked one
{% endcomment %}


{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
